% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef SolidVolume < handle
  % A shape filled with a uniform material
  properties
    shape
    % identifier referring to `ScannerInformation.bulkMaterials` list
    material_id
  end

  methods
    function self = SolidVolume(kwargs)
      arguments
        kwargs.shape;
        kwargs.material_id = uint32(0);
      end
      if ~isfield(kwargs, "shape")
        throw(yardl.TypeError("Missing required keyword argument 'shape'"))
      end
      self.shape = kwargs.shape;
      self.material_id = kwargs.material_id;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "petsird.SolidVolume") && ...
        isequal({self.shape}, {other.shape}) && ...
        isequal({self.material_id}, {other.material_id});
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end

    function res = isequal(self, other)
      res = all(eq(self, other));
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = petsird.SolidVolume(shape=yardl.None);
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
