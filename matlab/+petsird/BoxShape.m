% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef BoxShape < handle
  % A box-shape specified by 8 corners (e.g. cuboid, wedge, etc.)
  % TODO need to think about a clear definition of planes
  % We do not want to have to check about intersection planes
  % Potential mechanisms:
  % - lexicographical ordering of corner coordinates?
  % - first 4 coordinates give first plane, 5th and 6th need to define plane with first 2, etc.
  properties
    corners
  end

  methods
    function self = BoxShape(kwargs)
      arguments
        kwargs.corners = repelem(petsird.Coordinate(), 8);
      end
      self.corners = kwargs.corners;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "petsird.BoxShape") && ...
        isequal({self.corners}, {other.corners});
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end

    function res = isequal(self, other)
      res = all(eq(self, other));
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = petsird.BoxShape();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
