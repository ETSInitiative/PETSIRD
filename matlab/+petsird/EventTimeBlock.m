% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef EventTimeBlock < handle
  properties
    % start time since ExamInformation.startOfAcquisition in ms
    % Note: duration is given by ScannerInformation.eventTimeBlockDuration
    start
    % TODO encode end time?
    % list of prompts in this time block
    % TODO might be better to use !array
    prompt_events
    % optional list of delayed coincidences in this time block
    delayed_events
    % optional list of triple coincidences in this time block
    triple_events
  end

  methods
    function self = EventTimeBlock(kwargs)
      arguments
        kwargs.start = uint32(0);
        kwargs.prompt_events = petsird.CoincidenceEvent.empty();
        kwargs.delayed_events = yardl.None;
        kwargs.triple_events = yardl.None;
      end
      self.start = kwargs.start;
      self.prompt_events = kwargs.prompt_events;
      self.delayed_events = kwargs.delayed_events;
      self.triple_events = kwargs.triple_events;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "petsird.EventTimeBlock") && ...
        isequal({self.start}, {other.start}) && ...
        isequal({self.prompt_events}, {other.prompt_events}) && ...
        isequal({self.delayed_events}, {other.delayed_events}) && ...
        isequal({self.triple_events}, {other.triple_events});
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end

    function res = isequal(self, other)
      res = all(eq(self, other));
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = petsird.EventTimeBlock();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
