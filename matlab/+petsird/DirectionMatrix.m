% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef DirectionMatrix < handle
  % Orthonormal matrix
  % direction_of_first_axis = matrix * [1, 0 ,0] (as a column vector)
  properties
    matrix
  end

  methods
    function self = DirectionMatrix(kwargs)
      arguments
        kwargs.matrix = repelem(single(0), 3, 3);
      end
      self.matrix = kwargs.matrix;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "petsird.DirectionMatrix") && ...
        isequal({self.matrix}, {other.matrix});
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end

    function res = isequal(self, other)
      res = all(eq(self, other));
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = petsird.DirectionMatrix();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
