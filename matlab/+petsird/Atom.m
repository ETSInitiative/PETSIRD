% This file was generated by the "yardl" tool. DO NOT EDIT.

classdef Atom < handle
  % Atom definition in terms of Z and A
  properties
    % A
    mass_number
    % Z
    atomic_number
  end

  methods
    function self = Atom(kwargs)
      arguments
        kwargs.mass_number = uint32(0);
        kwargs.atomic_number = uint32(0);
      end
      self.mass_number = kwargs.mass_number;
      self.atomic_number = kwargs.atomic_number;
    end

    function res = eq(self, other)
      res = ...
        isa(other, "petsird.Atom") && ...
        isequal({self.mass_number}, {other.mass_number}) && ...
        isequal({self.atomic_number}, {other.atomic_number});
    end

    function res = ne(self, other)
      res = ~self.eq(other);
    end

    function res = isequal(self, other)
      res = all(eq(self, other));
    end
  end

  methods (Static)
    function z = zeros(varargin)
      elem = petsird.Atom();
      if nargin == 0
        z = elem;
        return;
      end
      sz = [varargin{:}];
      if isscalar(sz)
        sz = [sz, sz];
      end
      z = reshape(repelem(elem, prod(sz)), sz);
    end
  end
end
