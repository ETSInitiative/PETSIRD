// This file was generated by the "yardl" tool. DO NOT EDIT.

#pragma once
#include <array>
#include <complex>
#include <memory>
#include <optional>
#include <variant>
#include <vector>

#include "../yardl/detail/ndjson/reader_writer.h"
#include "../protocols.h"

namespace petsird::ndjson {
// NDJSON writer for the PETSIRD protocol.
// Definition of the stream of data
class PETSIRDWriter : public petsird::PETSIRDWriterBase, yardl::ndjson::NDJsonWriter {
  public:
  PETSIRDWriter(std::ostream& stream)
      : yardl::ndjson::NDJsonWriter(stream, schema_) {
  }

  PETSIRDWriter(std::string file_name)
      : yardl::ndjson::NDJsonWriter(file_name, schema_) {
  }

  void Flush() override;

  protected:
  void WriteHeaderImpl(petsird::Header const& value) override;
  void WriteTimeBlocksImpl(petsird::TimeBlock const& value) override;
  void EndTimeBlocksImpl() override {}
  void CloseImpl() override;
};

// NDJSON reader for the PETSIRD protocol.
// Definition of the stream of data
class PETSIRDReader : public petsird::PETSIRDReaderBase, yardl::ndjson::NDJsonReader {
  public:
  PETSIRDReader(std::istream& stream)
      : yardl::ndjson::NDJsonReader(stream, schema_) {
  }

  PETSIRDReader(std::string file_name)
      : yardl::ndjson::NDJsonReader(file_name, schema_) {
  }

  protected:
  void ReadHeaderImpl(petsird::Header& value) override;
  bool ReadTimeBlocksImpl(petsird::TimeBlock& value) override;
  void CloseImpl() override;
};

} // namespace petsird::ndjson
