// This file was generated by the "yardl" tool. DO NOT EDIT.

#pragma once
#include <array>
#include <complex>
#include <memory>
#include <optional>
#include <variant>
#include <vector>

#include "../protocols.h"
#include "../yardl/detail/binary/reader_writer.h"

namespace petsird::binary {
// Binary writer for the PETSIRD protocol.
// Definition of the stream of data
class PETSIRDWriter : public petsird::PETSIRDWriterBase, yardl::binary::BinaryWriter {
  public:
  PETSIRDWriter(std::ostream& stream, Version version = Version::Current)
      : yardl::binary::BinaryWriter(stream, petsird::PETSIRDWriterBase::SchemaFromVersion(version)), version_(version) {}

  PETSIRDWriter(std::string file_name, Version version = Version::Current)
      : yardl::binary::BinaryWriter(file_name, petsird::PETSIRDWriterBase::SchemaFromVersion(version)), version_(version) {}

  void Flush() override;

  protected:
  void WriteHeaderImpl(petsird::Header const& value) override;
  void WriteTimeBlocksImpl(petsird::TimeBlock const& value) override;
  void WriteTimeBlocksImpl(std::vector<petsird::TimeBlock> const& values) override;
  void EndTimeBlocksImpl() override;
  void CloseImpl() override;

  Version version_;
};

// Binary reader for the PETSIRD protocol.
// Definition of the stream of data
class PETSIRDReader : public petsird::PETSIRDReaderBase, yardl::binary::BinaryReader {
  public:
  PETSIRDReader(std::istream& stream)
      : yardl::binary::BinaryReader(stream), version_(petsird::PETSIRDReaderBase::VersionFromSchema(schema_read_)) {}

  PETSIRDReader(std::string file_name)
      : yardl::binary::BinaryReader(file_name), version_(petsird::PETSIRDReaderBase::VersionFromSchema(schema_read_)) {}

  Version GetVersion() { return version_; }

  protected:
  void ReadHeaderImpl(petsird::Header& value) override;
  bool ReadTimeBlocksImpl(petsird::TimeBlock& value) override;
  bool ReadTimeBlocksImpl(std::vector<petsird::TimeBlock>& values) override;
  void CloseImpl() override;

  Version version_;

  private:
  size_t current_block_remaining_ = 0;
};

} // namespace petsird::binary
