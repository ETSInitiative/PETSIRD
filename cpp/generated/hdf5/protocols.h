// This file was generated by the "yardl" tool. DO NOT EDIT.

#pragma once
#include <array>
#include <complex>
#include <optional>
#include <variant>
#include <vector>

#include "../protocols.h"
#include "../yardl/detail/hdf5/io.h"

namespace petsird::hdf5 {
// HDF5 writer for the PETSIRD protocol.
// Definition of the stream of data
class PETSIRDWriter : public petsird::PETSIRDWriterBase, public yardl::hdf5::Hdf5Writer {
  public:
  PETSIRDWriter(std::string path);

  protected:
  void WriteHeaderImpl(petsird::Header const& value) override;

  void WriteTimeBlocksImpl(petsird::TimeBlock const& value) override;

  void EndTimeBlocksImpl() override;

  public:
  void Flush() override;

  private:
  std::unique_ptr<yardl::hdf5::UnionDatasetWriter<4>> timeBlocks_dataset_state_;
};

// HDF5 reader for the PETSIRD protocol.
// Definition of the stream of data
class PETSIRDReader : public petsird::PETSIRDReaderBase, public yardl::hdf5::Hdf5Reader {
  public:
  PETSIRDReader(std::string path);

  void ReadHeaderImpl(petsird::Header& value) override;

  bool ReadTimeBlocksImpl(petsird::TimeBlock& value) override;

  private:
  std::unique_ptr<yardl::hdf5::UnionDatasetReader<4>> timeBlocks_dataset_state_;
};

} // namespace petsird

